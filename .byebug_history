exit
Item.best_day(item_id).class
Item.best_day(item_id)
exit
Customer.find(822)
hash.key(max_value)
c
next
exit
Customer.find(customer_id)
hash.key(max_value)
hash
exit
hash.key(max_value)
hash.values.max
max_value
hash
exit
a
exit
a.values.max
a.max.key
a.max
a
exita
exit
total_revenue.first
total_revenue
exit
total_revenue
total_revenue.first
exittotal_revenue.first
exit
Merchant.revenue(date)
exit
Invoice.select("sum(invoice_items.quantity * invoice_items.unit_price)").joins(:invoice_items, :transactions).where('invoices.updated_at = ? AND transactions.result = ?', date, "success")
   27:             .joins(:invoice_items, :transactions)
exitInvoice.select("sum(invoice_items.quantity * invoice_items.unit_price)")
exit
Merchant.revenue(date)
date
exit
next
revenue_params
exit
next
revenue_params
params
exit
quantity
a
exit
a.pluck(:id)
a
a.count
exit
quantity
exit
quantity
next
merchant_params[:quantity].to_i
merchant_params[:quantity]
merchant_params
params
exit
item_params['quantity'].to_i
item_params['quantity']
item_params
params
exit
'exit
Invoiceexit
Invoice.where(merchant_id: Merchant.first.id)
Merchant.first.invoices
Merchant.firstinvoices
Merchant.first
Merchant.all
get "/api/v1/merchants/#{merchant_1.id}"
get "/api/v1/merchants/#{merchant_1.id}
merchant_1.id
merchant_id.id
response.body
exit
transactions.first['result']
transactions.first
next
JSON.parse(response.body)
exit
params
exit
customer['first_name']
customer[:first_name]
customer
customer_1
exit
customer['first_name']
exit
customer['first_name']
response.body
customer
exit
ci
c
exit
response
exit
response.body
respond_with Customer.find_by(customer_params)
Customer.find_by(customer_params)
params
customer_params
exit
request.headers
exit
request.headers
exit
response
exit
response.body
exit
JSON.parse(response.body)
response.body
response
respond_with Customer.find_by(customer_params)
Customer.find_by(customer_params)
params
exit
exir
response
get "/api/v1/customers/find?first_name=#{Customer.first.first_name}", {}, { "Accept" => "application/json" }
                                              { "Accept" => "application/json" }
                                              {},
get "/api/v1/customers/find?first_name=#{Customer.first.first_name}",
exit
response.status
exit
response.status
request.headers
request.header
request.headers["REQUEST_URI"]
response
exit
Customer.first
Customer.all
Customer.count
request.headers["REQUEST_URI"]
exit
request.headers["REQUEST_URI"]
response
exit
request.headers["REQUEST_URI"]
response
exit
request.headers["REQUEST_URI"]
request
response
exit
request.headers["REQUEST_URI"]
request
exit
request.headers["REQUEST_URI"]
request.headers['url']
request.headers.url
request.headers
request.headers.keys
request.body
request
response
exit
customer_list
response
exit
"api/v1/customers/find?first_name=#{customer_list.first.first_name}"
customer_list.first.first_name
exit
Customer.count
exit
invoice_item['unit_price']
invoice_item_1.unit_price
invoice_item.unit_price
exit
merch.count
merch
exit
merchants.last['name']
merchants.last[:name]
merchants.last.name
exit
JSON.parse(response.body)
merchants.last
merchant
body
exit
params
exit
respond_to?('JSON')
respond_to?(JSON)
respond_to?(json)
respond_to?
methods
whereami
respond_with
params
exit
merchant.as_json
merchant.to_json
merchant
exit
merchant
exit
exi
Merchant.find_by(merchant_params)
Merchant.find_by(name: params[:name])
params[:name]
params
merchant_params
exit
merchantsexit
exit
next
params
exit
merchant_params.first[0].symbolize
merchant_params.first[0]
Merchant.find_by(merchant_params.first[0], merchant_params.first[1])
Merchant.find_by(merchant_params.first.key, merchant_params.first.value)
next
merchant_params
params
exit
params
exit
params
